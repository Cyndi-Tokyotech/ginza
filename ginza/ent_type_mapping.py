import json
import sys

__all__ = [
    'OMITTING_NE_TYPES',
    'ENT_NE_MAPPING',
]

OMITTING_NE_TYPES = {
    'OTHERS',
}

ENT_NE_MAPPING = {
    "Person": "PERSON",
    "God": "PERSON",
    "Individual_Animal": "ANIMAL",
    "Individual_Animal_Other": "ANIMAL",
    "Racehorse": "ANIMAL",
    "International_Organization": "NORP",
    "Ethnic_Group_Other": "NORP",
    "Nationality": "NORP",
    "Political_Organization_Other": "NORP",
    "Political_Party": "NORP",
    "Religion": "NORP",
    "Facility": "FAC",
    "Facility_Other": "FAC",
    "Facility_Part": "FAC",
    "Archaeological_Place_Other": "FAC",
    "Tumulus": "FAC",
    "GOE_Other": "FAC",
    "Public_Institution": "FAC",
    "Accommodation": "FAC",
    "School": "FAC",
    "Research_Institute": "FAC",
    "Market": "FAC",
    "Park": "FAC",
    "Sports_Facility": "FAC",
    "Museum": "FAC",
    "Zoo": "FAC",
    "Amusement_Park": "FAC",
    "Theater": "FAC",
    "Worship_Place": "FAC",
    "Car_Stop": "FAC",
    "Station": "FAC",
    "Airport": "FAC",
    "Port": "FAC",
    "Line_Other": "FAC",
    "Railroad": "FAC",
    "Road": "FAC",
    "Canal": "FAC",
    "Water_Route": "FAC",
    "Tunnel": "FAC",
    "Bridge": "FAC",
    "Organization_Other": "ORG",
    "Show_Organization": "ORG",
    "Family": "ORG",
    "Sports_Organization_Other": "ORG",
    "Sports_Federation": "ORG",
    "Pro_Sports_Organization": "ORG",
    "Sports_League": "ORG",
    "Corporation_Other": "ORG",
    "Nonprofit_Organization": "ORG",
    "Company": "ORG",
    "Company_Group": "ORG",
    "Government": "ORG",
    "Cabinet": "ORG",
    "Military": "ORG",
    "Location_Other": "GPE",
    "Spa": "GPE",
    "GPE_Other": "GPE",
    "City": "GPE",
    "Province": "GPE",
    "Country": "GPE",
    "County": "GPE",
    "Address_Other": "GPE",
    "Postal_Address": "GPE",
    "Region_Other": "LOC",
    "Continental_Region": "LOC",
    "Domestic_Region": "LOC",
    "Geological_Region_Other": "LOC",
    "Mountain": "LOC",
    "Island": "LOC",
    "River": "LOC",
    "Lake": "LOC",
    "Sea": "LOC",
    "Bay": "LOC",
    "Product_Other": "PRODUCT",
    "Clothing": "PRODUCT",
    "Money_Form": "PRODUCT",
    "Drug": "PRODUCT",
    "Weapon": "PRODUCT",
    "Stock": "PRODUCT",
    "Award": "PRODUCT",
    "Decoration": "PRODUCT",
    "Service": "PRODUCT",
    "Character": "PRODUCT",
    "ID_Number": "PRODUCT",
    "Vehicle_Other": "PRODUCT",
    "Car": "PRODUCT",
    "Train": "PRODUCT",
    "Aircraft": "PRODUCT",
    "Spaceship": "PRODUCT",
    "Ship": "PRODUCT",
    "Food_Other": "PRODUCT",
    "Event_Other": "EVENT",
    "Occasion_Other": "EVENT",
    "Religious_Festival": "EVENT",
    "Game": "EVENT",
    "Conference": "EVENT",
    "Incident_Other": "EVENT",
    "War": "EVENT",
    "Natural_Phenomenon_Other": "EVENT",
    "Natural_Disaster": "EVENT",
    "Earthquake": "EVENT",
    "Art_Other": "WORK_OF_ART",
    "Picture": "WORK_OF_ART",
    "Broadcast_Program": "WORK_OF_ART",
    "Movie": "WORK_OF_ART",
    "Show": "WORK_OF_ART",
    "Music": "WORK_OF_ART",
    "Book": "WORK_OF_ART",
    "Printing_Other": "WORK_OF_ART",
    "Newspaper": "WORK_OF_ART",
    "Magazine": "WORK_OF_ART",
    "Offense": "LAW",
    "Rule_Other": "LAW",
    "Treaty": "LAW",
    "Law": "LAW",
    "Movement": "LAW",
    "Plan": "LAW",
    "Doctrine_Method_Other": "LAW",
    "Language_Other": "LANGUAGE",
    "National_Language": "LANGUAGE",
    "Time_Top_Other": "DATE",
    "Date": "DATE",
    "Day_Of_Week": "DATE",
    "Era": "DATE",
    "Periodx_Other": "DATE",
    "Period_Day": "DATE",
    "Period_Week": "DATE",
    "Period_Month": "DATE",
    "Period_Year": "DATE",
    "Time": "TIME",
    "Period_Time": "TIME",
    "Percent": "PERCENT",
    "Currency": "MONEY",
    "Money": "MONEY",
    "Unit_Other": "QUANTITY",
    "Point": "QUANTITY",
    "Multiplication": "QUANTITY",
    "Frequency": "QUANTITY",
    "Age": "QUANTITY",
    "Latitude_Longtitude": "QUANTITY",
    "Measurement_Other": "QUANTITY",
    "Physical_Extent": "QUANTITY",
    "Space": "QUANTITY",
    "Volume": "QUANTITY",
    "Weight": "QUANTITY",
    "Speed": "QUANTITY",
    "Intensity": "QUANTITY",
    "Temperature": "QUANTITY",
    "Calorie": "QUANTITY",
    "Seismic_Intensity": "QUANTITY",
    "Seismic_Magnitude": "QUANTITY",
    "Countx_Other": "QUANTITY",
    "N_Person": "QUANTITY",
    "N_Organization": "QUANTITY",
    "N_Location_Other": "QUANTITY",
    "N_Country": "QUANTITY",
    "N_Facility": "QUANTITY",
    "N_Product": "QUANTITY",
    "N_Event": "QUANTITY",
    "N_Natural_Object_Other": "QUANTITY",
    "N_Animal": "QUANTITY",
    "N_Flora": "QUANTITY",
    "School_Age": "ORDINAL",
    "Ordinal_Number": "ORDINAL",
    "Rank": "ORDINAL",
    "Stock_Index": "CARDINAL",

    "Astral_Body_Other": "OTHERS",
    "Star": "OTHERS",
    "Planet": "OTHERS",
    "Constellation": "OTHERS",

    "Phone_Number": "PHONE",
    "Email": "EMAIL",
    "URL": "URL",

    "Class": "OTHERS",
    "Dish": "OTHERS",
    "Culture": "OTHERS",
    "Academic": "OTHERS",
    "Sport": "OTHERS",
    "Style": "OTHERS",
    "Theory": "OTHERS",
    "Title_Other": "OTHERS",
    "Position_Vocation": "OTHERS",
    "Numex_Other": "OTHERS",
    "Natural_Object_Other": "OTHERS",
    "Element": "OTHERS",
    "Compound": "OTHERS",
    "Mineral": "OTHERS",
    "Living_Thing_Other": "OTHERS",
    "Fungus": "OTHERS",
    "Mollusc_Arthropod": "OTHERS",
    "Insect": "OTHERS",
    "Fish": "OTHERS",
    "Amphibia": "OTHERS",
    "Reptile": "OTHERS",
    "Bird": "OTHERS",
    "Mammal": "OTHERS",
    "Flora": "OTHERS",
    "Living_Thing_Part": "OTHERS",
    "Animal_Part": "OTHERS",
    "Flora_Part": "OTHERS",
    "Disease_Other": "OTHERS",
    "Animal_Disease": "OTHERS",
    "Color_Other": "OTHERS",
    "Material": "OTHERS",
    "Living_Thing_Part_Other": "OTHERS",
    "Name_Other": "OTHERS",
    "Nature_Color": "OTHERS",
    "Timex_Other": "OTHERS",
}


if __name__ == '__main__':
    with open(sys.argv[1], 'r') as f:
        meta_json = json.load(f)
    for ne in meta_json['labels']['ner']:
        if ne not in ENT_NE_MAPPING:
            print(ne, 'not in mapping')
    for ent in ENT_NE_MAPPING:
        if ent not in meta_json['labels']['ner']:
            print(ent, 'not in labels')
